<template>
    <div class="role">
        <vxe-toolbar>
            <template #buttons>
                <div class="sercarINput">
                    <el-input v-model="SerInput.filterName " type="search" placeholder="请输入角色名称，搜索" @keyup="searchEvent2 "></el-input>
                    <el-button type="success" @click="searchEvent2">查询</el-button>
                    <el-button type="primary" @click="dialogVisible = true">新增菜单</el-button>
                </div>
            </template>
        </vxe-toolbar>
        <vxe-table show-header-overflow show-overflow :row-config="{isHover: true}" :data="state.RoleRouterList" v-loading="loadings">
            <vxe-column type="seq" title="序号" width="60"></vxe-column>
            <vxe-column field="roleName" title="角色名称"></vxe-column>
            <vxe-column field="roleIdentification" title="角色标识"></vxe-column>
            <vxe-column field="sort" title="排序"></vxe-column>
            <vxe-column field="roleState" title="角色状态">
                <template #default="{ row }">
                    <el-alert :title="row.roleState" type="success" style="width: 60%;" :closable="false" />
                </template>
            </vxe-column>
            <vxe-column field="roleDescription" title="角色描述"></vxe-column>
            <vxe-column field="createTime" title="创建时间">
                <template #default="{ row }">
                    {{ row.createTime }}
                </template>
            </vxe-column>
            <vxe-column field="" title="操作">
                <template #default="{row}">
                    <el-button link type="primary" @click="RolesEdit(row)">新增</el-button>
                    <el-button link type="primary" @click="RolesEdit(row)">修改</el-button>
                    <el-popconfirm title="你确认要删除这条数据吗 ?" @confirm="delRouteRoles(row)" confirm-button-text="确认" cancel-button-text="取消">
                        <template #reference>
                            <el-button link type="primary">删除</el-button>
                        </template>
                    </el-popconfirm>
                </template>
            </vxe-column>
        </vxe-table>
    </div>
    <!-- 弹框 -->
    <el-dialog v-model="dialogVisible" :title="state.Tips" :before-close="handleClose">
        <el-form v-model="RolesObj">
            <el-row :gutter="20">
                <el-col :span="12" :offset="0">
                    <el-form-item label="角色名称">
                        <el-input v-model="RolesObj.roleName"></el-input>
                    </el-form-item>
                </el-col>
                <el-col :span="12" :offset="0">
                    <el-form-item label="角色标识">
                        <el-input v-model="RolesObj.roleIdentification"></el-input>
                    </el-form-item>
                </el-col>
                <el-col :span="12" :offset="0">
                    <el-form-item label="排序">
                        <el-input-number v-model="RolesObj.sort" :min="1" :max="10" />
                    </el-form-item>
                </el-col>
                <el-col :span="12" :offset="0">
                    <el-form-item label="角色状态">
                        <el-tooltip :content="'Switch value: ' + RolesObj.roleState" placement="top"> <el-switch v-model="RolesObj.roleState" active-color="#13ce66" inactive-color="#ff4949" active-text="启用" inactive-text="关闭"> </el-switch> </el-tooltip>
                    </el-form-item>
                </el-col>
                <el-col :span="24" :offset="0">
                    <el-form-item label="角色描述">
                        <el-input type="textarea" :rows="2" placeholder="请输入内容" v-model="RolesObj.roleDescription">
                        </el-input>
                    </el-form-item>
                </el-col>
                <el-col :span="24" :offset="0">
                    <el-form-item label="角色描述">

                        <el-checkbox-group v-model="RolesObj.roles">
                            <el-checkbox label="系统管理" value="admin">1</el-checkbox>
                            <el-checkbox label="权限管理" value="common"></el-checkbox>

                        </el-checkbox-group>

                    </el-form-item>
                </el-col>
            </el-row>
        </el-form>
        <template #footer>
            <span class="dialog-footer">
                <el-button @click="dialogVisible = false">取消</el-button>
                <el-button type="primary" @click="onSubmit">
                    保存
                </el-button>
            </span>
        </template>
    </el-dialog>
</template>

<script setup lang="ts">
import { reactive, ref } from 'vue'
import { rolelist } from '/@/mock/index'
import { RouteRecordRaw } from 'vue-router'
import { RouterStore } from '/@/stores/RouterSrore'
import { integer } from 'vue-types'
const useRoultSess = RouterStore()
// 定义搜索
const SerInput = reactive<inputMenus>({
  filterName: ''
})

// 状态数据
const state = reactive({
  RoleRouterList: [], //数据
  Tips: '新增菜单'
})
const loadings = ref(false)
const getRolesRouterList = () => {
  loadings.value = false
  state.RoleRouterList = rolelist
}
getRolesRouterList()

// 搜索
const searchEvent2 = () => {
  loadings.value = true
  setTimeout(() => {
    getRolesRouterList()
  }, 1000)
}
const dialogVisible = ref(false)
// 菜单新增和编辑的数据
const RolesObj = reactive({
  id: '', //id
  roleName: '', //角色名称
  roleIdentification: '', //角色标识
  sort: 1, //排序
  roleState: '', //角色状态
  roleDescription: '', //角色描述
  roles: [], //权限
  createTime: '' //创建时间
})
// 编辑赋值
const RolesEdit = (row: RoleList): void => {
  RolesObj.id = row.id.toString()
  RolesObj.roleName = row.roleName.toString()
  RolesObj.roleIdentification = row.roleIdentification
  RolesObj.sort = parseInt(row.sort.toString())
  RolesObj.roleState = row.roleState
  RolesObj.roleDescription = row.roleDescription
  RolesObj.roles = Array(row.roles)
  RolesObj.createTime = row.createTime
  dialogVisible.value = true
}
// 关闭弹框的方法
const handleClose = (): void => {
  dialogVisible.value = false
  for (const key in RolesObj) {
    RolesObj[key] = ''
  }
  RolesObj.roles = []
  RolesObj.sort = 1
}
// 添加/修改的方法
const onSubmit = (): void => {
  loadings.value = true
  dialogVisible.value = false
  // 重新调用
  setTimeout(() => {
    getRolesRouterList()
  }, 1000)
}
//删除
const delRouteRoles = (row: RoleList): void => {
  loadings.value = true
  // 重新调用
  setTimeout(() => {
    getRolesRouterList()
  }, 1000)
}
</script>

<style scoped lang="scss">
.role {
  border: 0.7px solid var(--wangwang-border);
  width: 100%;
  padding: 5px;
  &:hover {
    box-shadow: 0 0 5px var(--wang-color-primary-lighter);
  }
  .sercarINput {
    display: flex;
  }
}
</style>