<template>
    <div class="HeaderTabar">
        <a-breadcrumb :routes="list">
            <template #itemRender="{ route, paths }">
                <appstore-two-tone />
                <router-link :to="route.path">
                    {{ route.meta.title }}
                </router-link>
            </template>
        </a-breadcrumb>
        <div class="rightsUSer">
            <!--  右侧内容 -->
        </div>
    </div>
    <!-- 路由缓存 -->
    <div class="wangwang_ulTaView">
        <el-scrollbar>
            <ul class="Tates">
                <li @click="getNavgater(i.path)" :class="isRouters(i.path)" v-for="i in listRouter" :key="i.name">{{
                    i.meta.title }}
                    <close-outlined v-if="i.meta.title !== '首页'" class="tetxsiocn" />
                </li>
            </ul>
        </el-scrollbar>
    </div>
</template>

<script setup lang="ts" name="HeaderTabar">
import { useRoute, RouteRecordRaw, useRouter } from 'vue-router';
import { RouterStore, RouterSession } from '/@/stores/RouterSrore'
import { ref, onMounted, computed } from 'vue';
import { AppstoreTwoTone, CloseOutlined } from '@ant-design/icons-vue';
const rouSTore = RouterStore()

const router = useRouter()

// 获取缓存路由
const rouSession = RouterSession()

const list = ref([
    {
        path: '/',
        redirect: '/home',
        meta: {
            title: '首页'
        }
    }
])
// 跳转路由
const getNavgater = (path: string): void => {
    router.push(path)
}


const isRouters = (roupath: string): string => {
    if (roupath === route.fullPath) {
        return 'actives'
    }
}

const route = useRoute()


// 缓存路由
const listRouter = computed(() => {
    return rouSession.RouterSessionlist
})

onMounted(() => {
    judge_is_dnag(rouSTore.routesList)
})


// 获取循环匹配当前路由下的值
const judge_is_dnag = (aRRs: RouteRecordRaw[]): void => {
    aRRs.forEach((element: any) => {
        if (element.path === route.fullPath && element.meta.title !== '首页') {
            list.value.push(element)
        } else {
            if (element.children) {
                judge_is_dnag(element.children)
            }
        }
    });
}

</script>

<style scoped lang="scss">
.HeaderTabar {
    height: 35px;
    display: flex;
    align-items: center;
}

.wangwang_ulTaView {
    height: 40px;
    width: 100%;
    line-height: 40px;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    background-color: var(--wang-bgcolor);
    width: calc(100vw - 251px);
    overflow: hidden;
    position: relative;

    .Tates {
        display: flex;
        height: 100%;
        align-items: center;
        box-sizing: border-box;
        padding-top: 4px;

        li {
            flex-shrink: 0;
            justify-content: center;
            width: 100px;
            display: flex;
            color: var(--wang-text-color);
            align-items: center;
            height: 25px;
            transition: all 0.4s;
            cursor: pointer;
            border-radius: 20px 0;
            margin: 0 2px;
            background-color: var(--wang-menu-bgcolor);

            .tetxsiocn {
                margin-left: 10px;

                &:hover {
                    background-color: var(--wang-color-primary-lighter);
                    color: white;
                    border-radius: 50%;
                }
            }

            &:hover {
                background-color: var(--wang-color--parimary-bg);
            }
        }

        .actives {
            background-color: var(--wang-color--parimary-bg);
            color: var(--wang-color-primary-lighter);
        }
    }
}
</style>