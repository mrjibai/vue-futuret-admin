<template>
    <a-layout-sider width="240px" v-model:collapsed="ThemeConfig.collapsed" class="wangwangSide">
        <div class="navTabar">
            <!-- theme="dark" -->
            <a-menu v-model:openKeys="state.openKeys" style="height: 100vh;" mode="inline"
                v-model:selectedKeys="state.selectedKeys">
                <template v-for="chi in RouterListchi" :key="chi.path">
                    <a-menu-item v-if="!chi.children" @click="getuseRouter(chi.path)" :key="chi.path">
                        <template #icon>
                            <SvgIcon :name="chi.meta.icon" />
                        </template>
                        <span>
                            {{ $t(chi.meta.title) }}
                        </span>
                    </a-menu-item>
                    <template v-if="chi.children">
                        <a-sub-menu :key="chi.path">
                            <template #icon>
                                <SvgIcon :name="chi.meta.icon" />
                            </template>
                            <template #title>{{ $t(chi.meta.title) }}</template>
                            <template v-for="on in chi.children" :key="on.path">
                                <a-menu-item @click="getuseRouter(on.path)" v-if="!on.children" :key="on.path">
                                    <template #icon>
                                        <SvgIcon :name="on.meta.icon" />
                                    </template>
                                    <span>{{ $t(on.meta.title) }}</span>

                                </a-menu-item>
                                <template v-else>
                                    <a-sub-menu :key="on.path">
                                        <template #icon>
                                            <SvgIcon :name="on.meta.icon" />
                                        </template>
                                        <template #title>{{ $t(on.meta.title) }}</template>
                                        <navTabar_chilren :RouterChildren="on.children" />
                                    </a-sub-menu>
                                </template>

                            </template>
                        </a-sub-menu>
                    </template>
                </template>
            </a-menu>
        </div>
    </a-layout-sider>
    <div :style="ThemeConfig.collapsed ? 'width: 80px;' : 'width:240px'"></div>
</template>

<script setup lang="ts">
import { reactive, computed, watch, onMounted } from 'vue';
import { RouterStore, RouterSession } from '/@/stores/RouterSrore'
import { useRoute, useRouter } from 'vue-router';
import { DataViewState } from '/@/stores/RouterView'
import { storeToRefs } from 'pinia'
const DataView = DataViewState()
const { ThemeConfig } = storeToRefs(DataView)
const route = useRoute()
const Rout = RouterStore()

// 获取缓存路由
const rouSession = RouterSession()
const router = useRouter()
const state = reactive({
    selectedKeys: [route.fullPath],
    openKeys: [],
    preOpenKeys: ['sub1'],
});
// 自动适应跳转
watch(() => route.fullPath, (newvalue) => {
    state.selectedKeys = [route.fullPath]


})
onMounted(() => {
    const propsRouter = rouSession.RouterSessionlist.find(e => e.fullPath === route.fullPath).matched
    propsRouter.splice(0, 1)
    state.openKeys = propsRouter.map((e: any) => e.path)
})
// 跳转
const getuseRouter = (paths: string): void => {
    router.push(paths)
}

const RouterListchi = computed(() => {
    return (<Array<any>>Rout.routesList)
})


</script>

<style scoped lang="scss">
.wangwangSide {
    position: fixed !important;
    left: 0;
    top: 0;
    bottom: 0;
    z-index: 11;
    max-width: 240px;
    height: 100vh;
    max-height: 100vh;
    overflow-y: scroll;

    .navTabar {
        :deep(.ant-menu) {
            background-color: var(--wang-menu-bgcolor);
            color: var(--wang-menu-color);
            width: 100%;

            .ant-menu-item {
                color: var(--wang-menu-color);

                &:hover {
                    // filter: brightness(200%);
                    background-color: var(--wang-meun-hover-color);
                    color: var(--wang-menu-color);
                }
            }

            .ant-menu-submenu-active {
                &>.ant-menu-submenu-title {
                    &:hover {
                        // filter: brightness(200%);
                        background-color: var(--wang-meun-hover-color) !important;
                        color: var(--wang-menu-color) !important;
                    }
                }
            }

            .ant-menu-submenu {
                &>.ant-menu-inline {
                    background-color: var(--wang-menu-bgcolor) !important;
                    color: var(--wang-menu-color) !important;
                }

                &>.ant-menu-submenu-title {
                    &:hover {
                        // filter: brightness(200%);
                        background-color: var(--wang-meun-hover-color) !important;
                        color: var(--wang-menu-color) !important;
                    }
                }
            }

            .ant-menu-submenu,
            .ant-menu-item-selected {
                color: var(--wang-menu-color);

                &>.ant-menu-item-icon {
                    color: var(--wang-menu-activetext) !important;
                }
            }

            .ant-menu-item-active {
                &:hover {
                    // filter: brightness(200%);
                    background-color: var(--wang-meun-hover-color) !important;
                    color: var(--wang-menu-color) !important;
                }
            }


        }

        // :deep(.css-dev-only-do-not-override-i3mqvl.ant-menu-light) {
        //     .ant-menu-item-selected {
        //         background-color: var(--wang-menu-active) !important;
        //         color: var(--wang-menu-activetext);

        //         &:hover {
        //             // filter: brightness(200%);
        //             background-color: var(--wang-meun-hover-color);
        //             color: var(--wang-menu-activetext);
        //         }

        //         &>.ant-menu-submenu-title {

        //             .ant-menu-title-content {
        //                 color: var(--wang-menu-activetext);
        //             }
        //         }
        //     }
        // }



    }
}

.ant-layout-sider {
    background: var(--wang-menu-bgcolor) !important;
    margin-right: 20px;
}
</style>